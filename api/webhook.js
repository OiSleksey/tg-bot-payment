export default async function handler(req, res) {
    console.log('üî• Webhook –≤—ã–∑–≤–∞–Ω');

    const body = req.body;
    const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
    const allowedUsers = [6602497931]; // ‚Üê –¢–≤–æ–π Telegram ID (—á–∏—Å–ª–æ–º)

    const userId = body?.message?.from?.id || body?.callback_query?.from?.id;
    const chatId = body?.message?.chat?.id || body?.callback_query?.message?.chat?.id;

    if (!userId || !allowedUsers.includes(userId)) {
        console.log('üö´ –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ', userId);

        if (chatId) {
            await fetch(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    chat_id: chatId,
                    text: 'üö´ –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.',
                }),
            });
        }

        return res.status(200).send('üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω');
    }

    // üü¢ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∏ /start
    if (body.message?.text === '/start') {
        await fetch(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: chatId,
                text: 'üëã –ü—Ä–∏–≤–µ—Ç! –¢—ã –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö!',
            }),
        });
    }

    // üü° –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ (callback_query)
    if (body.callback_query) {
        const data = body.callback_query.data; // –Ω–∞–ø—Ä: "pay_203"
        const [action, id] = data.split('_');
        const user = body.callback_query.from.username || body.callback_query.from.first_name;
        const messageId = body.callback_query.message.message_id;

        console.log(`üìå –î–µ–π—Å—Ç–≤–∏–µ: ${action}, ID: ${id}, –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user}`);

        // 1. –£–¥–∞–ª–∏–º –∫–Ω–æ–ø–∫–∏ (–æ—á–∏—Å—Ç–∏–º reply_markup)
        await fetch(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/editMessageReplyMarkup`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: chatId,
                message_id: messageId,
                reply_markup: { inline_keyboard: [] },
            }),
        });

        // 2. –û—Ç–ø—Ä–∞–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–µ–π—Å—Ç–≤–∏–∏
        await fetch(`https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: chatId,
                text: `‚úîÔ∏è –î–µ–π—Å—Ç–≤–∏–µ "${action}" –≤—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–ª—è ID: ${id} –≤ ${new Date().toLocaleString('ru-RU')}`,
            }),
        });
    }

    res.status(200).send('ok');
}
